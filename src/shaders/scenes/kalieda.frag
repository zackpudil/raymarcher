#version 330 core

out vec4 fragColor;

uniform vec2 resolution;
uniform float time;

uniform mat3 camera;
uniform vec3 eye;
uniform float fov;

const float tmax = 20.0;

void rotate(inout vec2 p, float a) {
	float s = sin(a);
	float c = cos(a);

	p = mat2(c, s, -s, c)*p;
}

vec4 orb;
float de(vec3 p) {
	orb = vec4(10000.0);
	for(int i = 0; i < 8; i++) {
		rotate(p.xy, 0.8);
		rotate(p.xz, 0.4 + 0.4*cos(time));
		p = abs(p);
		p = 2.0*p - 1.0;
		
		orb = min(orb, vec4(abs(p), length(p)));
	}
	
	return length(p.xz)*pow(2.0, -8.0) - 0.01;
}

void cameraPath(inout vec3 p, inout vec3 d, float t) {
	t = mod(t, 39.323353);
	if(t >= 0.000000 && t < 1.002091) {
		p = mix(vec3(0.000000, 0.000000, 3.000000),vec3(0.000000, 0.000000, 3.000000), abs(1.002091 - t)/1.002091);
		d = mix(vec3(-0.000000, 0.000000, -1.000000),vec3(0.000000, 0.000000, 1.000000), abs(1.002091 - t)/1.002091);
	} else if(t >= 1.002091 && t < 2.019173) {
		p = mix(vec3(0.011173, -0.001748, 2.820203),vec3(0.000000, 0.000000, 3.000000), abs(2.019173 - t)/1.017082);
		d = mix(vec3(0.069746, -0.017452, -0.997412),vec3(-0.000000, 0.000000, -1.000000), abs(2.019173 - t)/1.017082);
	} else if(t >= 2.019173 && t < 3.035114) {
		p = mix(vec3(0.131031, -0.061484, 2.225859),vec3(0.011173, -0.001748, 2.820203), abs(3.035114 - t)/1.015941);
		d = mix(vec3(0.230881, -0.147809, -0.961689),vec3(0.069746, -0.017452, -0.997412), abs(3.035114 - t)/1.015941);
	} else if(t >= 3.035114 && t < 4.035889) {
		p = mix(vec3(0.090657, -0.030241, 1.662113),vec3(0.131031, -0.061484, 2.225859), abs(4.035889 - t)/1.000775);
		d = mix(vec3(-0.504069, 0.477159, -0.719885),vec3(0.230881, -0.147809, -0.961689), abs(4.035889 - t)/1.000775);
	} else if(t >= 4.035889 && t < 5.037532) {
		p = mix(vec3(-0.532546, 0.389501, 1.533434),vec3(0.090657, -0.030241, 1.662113), abs(5.037532 - t)/1.001643);
		d = mix(vec3(-0.376534, 0.484810, -0.789419),vec3(-0.504069, 0.477159, -0.719885), abs(5.037532 - t)/1.001643);
	} else if(t >= 5.037532 && t < 6.052109) {
		p = mix(vec3(-1.136626, 0.709641, 1.066687),vec3(-0.532546, 0.389501, 1.533434), abs(6.052109 - t)/1.014576);
		d = mix(vec3(0.240367, 0.113203, -0.964059),vec3(-0.376534, 0.484810, -0.789419), abs(6.052109 - t)/1.014576);
	} else if(t >= 6.052109 && t < 7.052970) {
		p = mix(vec3(-1.334390, 1.180632, 0.240084),vec3(-1.136626, 0.709641, 1.066687), abs(7.052970 - t)/1.000862);
		d = mix(vec3(0.729092, -0.284015, -0.622704),vec3(0.240367, 0.113203, -0.964059), abs(7.052970 - t)/1.000862);
	} else if(t >= 7.052970 && t < 8.070392) {
		p = mix(vec3(-1.196993, 0.945167, -0.567901),vec3(-1.334390, 1.180632, 0.240084), abs(8.070392 - t)/1.017421);
		d = mix(vec3(0.817495, -0.515038, -0.257755),vec3(0.729092, -0.284015, -0.622704), abs(8.070392 - t)/1.017421);
	} else if(t >= 8.070392 && t < 9.086637) {
		p = mix(vec3(-0.888731, 0.741885, -1.188947),vec3(-1.196993, 0.945167, -0.567901), abs(9.086637 - t)/1.016246);
		d = mix(vec3(0.689417, -0.662620, 0.292640),vec3(0.817495, -0.515038, -0.257755), abs(9.086637 - t)/1.016246);
	} else if(t >= 9.086637 && t < 10.086984) {
		p = mix(vec3(-0.670330, 0.729998, -1.436886),vec3(-0.888731, 0.741885, -1.188947), abs(10.086984 - t)/1.000346);
		d = mix(vec3(0.389718, -0.594823, 0.703069),vec3(0.689417, -0.662620, 0.292640), abs(10.086984 - t)/1.000346);
	} else if(t >= 10.086984 && t < 11.102791) {
		p = mix(vec3(-0.428985, 0.448995, -0.955780),vec3(-0.670330, 0.729998, -1.436886), abs(11.102791 - t)/1.015807);
		d = mix(vec3(0.371123, -0.446198, 0.814356),vec3(0.389718, -0.594823, 0.703069), abs(11.102791 - t)/1.015807);
	} else if(t >= 11.102791 && t < 12.103007) {
		p = mix(vec3(-0.310807, 0.315659, -0.727052),vec3(-0.428985, 0.448995, -0.955780), abs(12.103007 - t)/1.000216);
		d = mix(vec3(0.482941, -0.522499, 0.702683),vec3(0.371123, -0.446198, 0.814356), abs(12.103007 - t)/1.000216);
	} else if(t >= 12.103007 && t < 13.104289) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.310807, 0.315659, -0.727052), abs(13.104289 - t)/1.001282);
		d = mix(vec3(0.236443, -0.406737, 0.882417),vec3(0.482941, -0.522499, 0.702683), abs(13.104289 - t)/1.001282);
	} else if(t >= 13.104289 && t < 14.120019) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.233355, 0.191552, -0.485012), abs(14.120019 - t)/1.015730);
		d = mix(vec3(0.676915, -0.731354, -0.083115),vec3(0.236443, -0.406737, 0.882417), abs(14.120019 - t)/1.015730);
	} else if(t >= 14.120019 && t < 15.121281) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.233355, 0.191552, -0.485012), abs(15.121281 - t)/1.001262);
		d = mix(vec3(0.960347, -0.275637, -0.041930),vec3(0.676915, -0.731354, -0.083115), abs(15.121281 - t)/1.001262);
	} else if(t >= 15.121281 && t < 16.136984) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.233355, 0.191552, -0.485012), abs(16.136984 - t)/1.015703);
		d = mix(vec3(0.443227, 0.754710, 0.483697),vec3(0.960347, -0.275637, -0.041930), abs(16.136984 - t)/1.015703);
	} else if(t >= 16.136984 && t < 17.137846) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.233355, 0.191552, -0.485012), abs(17.137846 - t)/1.000862);
		d = mix(vec3(-0.216431, 0.008727, 0.976259),vec3(0.443227, 0.754710, 0.483697), abs(17.137846 - t)/1.000862);
	} else if(t >= 17.137846 && t < 18.138454) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.233355, 0.191552, -0.485012), abs(18.138454 - t)/1.000608);
		d = mix(vec3(-0.527793, -0.777146, 0.342752),vec3(-0.216431, 0.008727, 0.976259), abs(18.138454 - t)/1.000608);
	} else if(t >= 18.138454 && t < 19.154640) {
		p = mix(vec3(-0.233355, 0.191552, -0.485012),vec3(-0.233355, 0.191552, -0.485012), abs(19.154640 - t)/1.016186);
		d = mix(vec3(-0.233303, -0.034899, -0.971778),vec3(-0.527793, -0.777146, 0.342752), abs(19.154640 - t)/1.016186);
	} else if(t >= 19.154640 && t < 20.171721) {
		p = mix(vec3(-0.252682, 0.217392, -0.631165),vec3(-0.233355, 0.191552, -0.485012), abs(20.171721 - t)/1.017080);
		d = mix(vec3(-0.103749, 0.121869, -0.987109),vec3(-0.233303, -0.034899, -0.971778), abs(20.171721 - t)/1.017080);
	} else if(t >= 20.171721 && t < 21.171967) {
		p = mix(vec3(-0.573466, 0.514986, -0.966239),vec3(-0.252682, 0.217392, -0.631165), abs(21.171967 - t)/1.000246);
		d = mix(vec3(-0.836035, 0.507538, 0.208447),vec3(-0.103749, 0.121869, -0.987109), abs(21.171967 - t)/1.000246);
	} else if(t >= 21.171967 && t < 22.172104) {
		p = mix(vec3(-0.977339, 1.204806, -0.844123),vec3(-0.573466, 0.514986, -0.966239), abs(22.172104 - t)/1.000137);
		d = mix(vec3(0.567276, -0.147809, 0.810154),vec3(-0.836035, 0.507538, 0.208447), abs(22.172104 - t)/1.000137);
	} else if(t >= 22.172104 && t < 23.189243) {
		p = mix(vec3(-1.083445, 1.771707, -0.158825),vec3(-0.977339, 1.204806, -0.844123), abs(23.189243 - t)/1.017139);
		d = mix(vec3(0.881309, -0.461749, 0.100412),vec3(0.567276, -0.147809, 0.810154), abs(23.189243 - t)/1.017139);
	} else if(t >= 23.189243 && t < 24.204676) {
		p = mix(vec3(-1.422454, 2.010386, 0.631539),vec3(-1.083445, 1.771707, -0.158825), abs(24.204676 - t)/1.015432);
		d = mix(vec3(0.521187, -0.798636, -0.300908),vec3(0.881309, -0.461749, 0.100412), abs(24.204676 - t)/1.015432);
	} else if(t >= 24.204676 && t < 25.206043) {
		p = mix(vec3(-2.098334, 1.884896, 0.775698),vec3(-1.422454, 2.010386, 0.631539), abs(25.206043 - t)/1.001368);
		d = mix(vec3(0.664332, -0.662620, -0.345829),vec3(0.521187, -0.798636, -0.300908), abs(25.206043 - t)/1.001368);
	} else if(t >= 25.206043 && t < 26.222536) {
		p = mix(vec3(-2.569798, 1.398059, 0.257702),vec3(-2.098334, 1.884896, 0.775698), abs(26.222536 - t)/1.016493);
		d = mix(vec3(0.813000, -0.580703, -0.042608),vec3(0.664332, -0.662620, -0.345829), abs(26.222536 - t)/1.016493);
	} else if(t >= 26.222536 && t < 27.239336) {
		p = mix(vec3(-2.493836, 0.675374, -0.339642),vec3(-2.569798, 1.398059, 0.257702), abs(27.239336 - t)/1.016800);
		d = mix(vec3(0.872489, -0.484810, 0.061010),vec3(0.813000, -0.580703, -0.042608), abs(27.239336 - t)/1.016800);
	} else if(t >= 27.239336 && t < 28.239605) {
		p = mix(vec3(-2.144633, -0.129204, -0.895861),vec3(-2.493836, 0.675374, -0.339642), abs(28.239605 - t)/1.000269);
		d = mix(vec3(0.888113, -0.422618, 0.180689),vec3(0.872489, -0.484810, 0.061010), abs(28.239605 - t)/1.000269);
	} else if(t >= 28.239605 && t < 29.256399) {
		p = mix(vec3(-1.446617, -0.833001, -1.235848),vec3(-2.144633, -0.129204, -0.895861), abs(29.256399 - t)/1.016794);
		d = mix(vec3(0.874003, -0.104528, 0.474545),vec3(0.888113, -0.422618, 0.180689), abs(29.256399 - t)/1.016794);
	} else if(t >= 29.256399 && t < 30.273159) {
		p = mix(vec3(-0.585401, -1.396453, -1.328572),vec3(-1.446617, -0.833001, -1.235848), abs(30.273159 - t)/1.016760);
		d = mix(vec3(0.482206, 0.414693, 0.771691),vec3(0.874003, -0.104528, 0.474545), abs(30.273159 - t)/1.016760);
	} else if(t >= 30.273159 && t < 31.288992) {
		p = mix(vec3(0.163669, -1.868333, -1.198490),vec3(-0.585401, -1.396453, -1.328572), abs(31.288992 - t)/1.015833);
		d = mix(vec3(0.092293, 0.469472, 0.878111),vec3(0.482206, 0.414693, 0.771691), abs(31.288992 - t)/1.015833);
	} else if(t >= 31.288992 && t < 32.289772) {
		p = mix(vec3(0.745733, -2.111142, -0.945361),vec3(0.163669, -1.868333, -1.198490), abs(32.289772 - t)/1.000780);
		d = mix(vec3(-0.285085, 0.713250, 0.640312),vec3(0.092293, 0.469472, 0.878111), abs(32.289772 - t)/1.000780);
	} else if(t >= 32.289772 && t < 33.290115) {
		p = mix(vec3(1.203823, -1.923317, -0.556561),vec3(0.745733, -2.111142, -0.945361), abs(33.290115 - t)/1.000343);
		d = mix(vec3(-0.312011, 0.843391, 0.437424),vec3(-0.285085, 0.713250, 0.640312), abs(33.290115 - t)/1.000343);
	} else if(t >= 33.290115 && t < 34.306683) {
		p = mix(vec3(1.853179, -1.228631, -0.343401),vec3(1.203823, -1.923317, -0.556561), abs(34.306683 - t)/1.016567);
		d = mix(vec3(-0.486420, 0.819152, 0.303949),vec3(-0.312011, 0.843391, 0.437424), abs(34.306683 - t)/1.016567);
	} else if(t >= 34.306683 && t < 35.323124) {
		p = mix(vec3(2.274085, -0.662298, 0.123341),vec3(1.853179, -1.228631, -0.343401), abs(35.323124 - t)/1.016441);
		d = mix(vec3(-0.827896, 0.537300, 0.160927),vec3(-0.486420, 0.819152, 0.303949), abs(35.323124 - t)/1.016441);
	} else if(t >= 35.323124 && t < 36.323257) {
		p = mix(vec3(1.912796, 0.081607, 0.667405),vec3(2.274085, -0.662298, 0.123341), abs(36.323257 - t)/1.000134);
		d = mix(vec3(-0.910394, 0.147809, -0.386439),vec3(-0.827896, 0.537300, 0.160927), abs(36.323257 - t)/1.000134);
	} else if(t >= 36.323257 && t < 37.340137) {
		p = mix(vec3(1.759700, 0.508162, 0.828406),vec3(1.912796, 0.081607, 0.667405), abs(37.340137 - t)/1.016880);
		d = mix(vec3(-0.863852, -0.156434, -0.478841),vec3(-0.910394, 0.147809, -0.386439), abs(37.340137 - t)/1.016880);
	} else if(t >= 37.340137 && t < 38.357067) {
		p = mix(vec3(1.734957, 0.625229, 0.815092),vec3(1.759700, 0.508162, 0.828406), abs(38.357067 - t)/1.016930);
		d = mix(vec3(-0.937107, -0.292372, -0.190656),vec3(-0.863852, -0.156434, -0.478841), abs(38.357067 - t)/1.016930);
	}
}

void main() {
	vec2 p = -1.0 + 2.0*gl_FragCoord.xy/resolution;
	p.x *= resolution.x/resolution.y;

	float hack1 = time;
	float hack2 = fov;
	mat3 hack3 = camera;
	vec3 hack4 = eye;

	vec3 col = vec3(0);

	vec3 ro = vec3(0, 0, -2);
	//vec3 ro = eye;
	vec3 ww = vec3(0, 0, 1);
	cameraPath(ro, ww, time);
	ww = normalize(ww);
	vec3 uu = normalize(cross(ww, vec3(0, 1, 0)));
	vec3 vv = normalize(cross(uu, ww));

	vec3 rd = normalize(p.x*uu + p.y*vv + 1.97*ww);
	//vec3 rd = normalize(camera*vec3(p, fov));

	float t = 0.0;
	for(int i = 0; i < 100; i++) {
		float d = de(ro + rd*t);
		if(d < 0.001*t || t >= tmax) break;
		t += d;
	}

	if(t < tmax) {
		vec3 pos = ro + rd*t;
		vec2 eps = vec2(0.001, 0.0);
		vec3 nor = normalize(vec3(
			de(pos + eps.xyy) - de(pos - eps.xyy),
			de(pos + eps.yxy) - de(pos - eps.yxy),
			de(pos + eps.yyx) - de(pos - eps.yyx)
		));

		float o = 0.0, w = 1.0, s = 0.01;
		for(int i = 0; i < 15; i++) {
			float d = de(pos + nor*s);
			o += (s - d)*w;
			w *= 0.9;
			s += s/(float(i) + 1.0);
		}

		vec3 oc = cos(vec3(0.1,0.6,1.6))*orb.x
			+ sin(vec3(0.0,0.6,1.0))*orb.y 
			+ cos(vec3(0.8,0.78,1.0))*orb.z 
			+ sin(vec3(0.1,0.7,0.4))*orb.w;
		
		col = mix(vec3(1, 0.4, 0.4), 3.0*oc, 0.1);
		
		col *= vec3(1.0 - clamp(o, 0.0, 1.0));
	}

	fragColor = vec4(col, 1);
}